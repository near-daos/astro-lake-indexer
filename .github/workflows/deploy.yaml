name: Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: Specify environment to run on. Valid values are development, production
      tag:
        required: true
        description: Specify docker tag to deploy.

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  get-environment:
    name: Get Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.get-environment.outputs.environment }}
      namespace: ${{ steps.get-environment.outputs.namespace }}
      docker_env_tag: ${{ steps.get-environment.outputs.docker_env_tag }}
    steps:
      - name: get environment
        id: get-environment
        shell: bash
        run: |
            echo "input was provided: ${{ github.event.inputs.environment }}"
            echo "::set-output name=environment::${{ github.event.inputs.environment }}"
            case "${{ github.event.inputs.environment }}" in
              development)
                echo "::set-output name=docker_env_tag::develop-$GITHUB_SHA"
                echo "::set-output name=namespace::sputnik-v2-${{ github.event.inputs.environment }}"
              ;;
              production)
                echo "::set-output name=docker_env_tag::$GITHUB_SHA"
                echo "::set-output name=namespace::sputnik-v2"
              ;;
              *)
                echo "Provided environment '${{ github.event.inputs.environment }}' is incorrect"
                exit 1
              ;;
            esac

  helm-deploy:
    name: Helm Deploy
    runs-on: ubuntu-latest
    needs:
      - get-environment
    environment:
      name: ${{ needs.get-environment.outputs.environment }}
    steps:
      - uses: actions/checkout@v2
      - name: Set Environment
        run: |
          echo DOCKER_ENV_TAG=${{ needs.get-environment.outputs.docker_env_tag }} >> $GITHUB_ENV
          cat ".github/env.common" | grep -E -v '^\ *#' >>$GITHUB_ENV
          cat ".github/env.${{ needs.get-environment.outputs.environment }}" | grep -E -v '^\ *#' >>$GITHUB_ENV
      - name: Helm Deploy
        uses: koslib/helm-eks-action@v1.8.0
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          command: |
            set -x
            echo "environment:" > env-values.yaml
            env | grep '^HELM' | sed -e 's/^HELM_//' -e 's/=/: /' -e 's/^/  /' >> env-values.yaml
            export CHART_FOLDER=deployment/indexer
            helm lint $CHART_FOLDER
            helm -n ${{ needs.get-environment.outputs.namespace }} \
              upgrade --install astro-lake-indexer $CHART_FOLDER \
              -f env-values.yaml \
              --set image.tag=$DOCKER_ENV_TAG
